apiVersion: apps/v1
kind: Deployment
metadata:
  name: invoices-deployment
  # namespace: k8s-proyecto-final-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: invoices
  template:
    metadata:
      labels:
        app: invoices
    spec:
      serviceAccountName: k8s-proyecto-final-serviceaccount
      containers:
        - name: invoices-contenedor
          image: us-central1-docker.pkg.dev/experimentos-435400/uniandes-misw-proyecto-grado-19/invoices:9.0
          envFrom:
            - secretRef:
                name: db-secrets
          ports:
            - containerPort: 3002

---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: invoices-config
spec:
  healthCheck:
    checkIntervalSec: 60
    port: 3002
    type: HTTP
    requestPath: /invoice/ping

---
apiVersion: v1
kind: Service
metadata:
  name: invoices-service
  annotations:
    cloud.google.com/backend-config: '{"default": "invoices-config"}'
spec:
  selector:
    app: invoices
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3002
      nodePort: 32335
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payments-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: payments
  template:
    metadata:
      labels:
        app: payments
    spec:
      serviceAccountName: k8s-proyecto-final-serviceaccount
      containers:
        - name: payments-contenedor
          image: us-central1-docker.pkg.dev/experimentos-435400/uniandes-misw-proyecto-grado-19/payments:10.2
          envFrom:
            - secretRef:
                name: db-secrets
          ports:
            - containerPort: 3001
            
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: payments-config
spec:
  healthCheck:
    checkIntervalSec: 60
    port: 3001
    type: HTTP
    requestPath: /payment/ping

---
apiVersion: v1
kind: Service
metadata:
  name: payments-service
  annotations:
    cloud.google.com/backend-config: '{"default": "payments-config"}'
spec:
  selector:
    app: payments
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3001
      nodePort: 32336
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: plans-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: plans
  template:
    metadata:
      labels:
        app: plans
    spec:
      containers:
        - name: plans-contenedor
          image: us-central1-docker.pkg.dev/experimentos-435400/uniandes-misw-proyecto-grado-19/plans:2.0
          envFrom:
            - secretRef:
                name: db-secrets
          ports:
            - containerPort: 3003

---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: plans-config
spec:
  healthCheck:
    checkIntervalSec: 60
    port: 3003
    type: HTTP
    requestPath: /plan/ping

---
apiVersion: v1
kind: Service
metadata:
  name: plans-service
  annotations:
    cloud.google.com/backend-config: '{"default": "plans-config"}'
spec:
  selector:
    app: plans
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3003
      nodePort: 32337
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: incidents-deployment
  # namespace: k8s-proyecto-final-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: incidents
  template:
    metadata:
      labels:
        app: incidents
    spec:
      serviceAccountName: k8s-proyecto-final-serviceaccount
      containers:
        - name: incidents-contenedor
          image: us-central1-docker.pkg.dev/experimentos-435400/uniandes-misw-proyecto-grado-19/incident:1.0
          envFrom:
            - secretRef:
                name: db-secrets
          ports:
            - containerPort: 3004

---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: incident-config
spec:
  healthCheck:
    checkIntervalSec: 60
    port: 3004
    type: HTTP
    requestPath: /incident/ping

---
apiVersion: v1
kind: Service
metadata:
  name: incident-service
  annotations:
    cloud.google.com/backend-config: '{"default": "incident-config"}'
spec:
  selector:
    app: incidents
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3004
      nodePort: 32338
  type: NodePort